# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

package(default_visibility = ["//visibility:private"])

# Remember: all targets require the following environment variable:
#    BAZEL_CXXOPTS="-std=c++17"

cc_library(
  name = "metrics_tracker",
  srcs = ["metrics_tracker.cc"],
  hdrs = ["metrics_tracker.hpp"],
  deps = [
    "@streaming-percentiles//cpp:cpp",
  ]
)

cc_library(
  name = "perftest_config",
  srcs = ["perftest_config.cc"],
  hdrs = ["perftest_config.hpp"],
  deps = [
    ":universes",
        "@com_google_absl//absl/flags:flag",
         "@com_google_absl//absl/strings",
  ]
)

cc_library(
  name = "universes",
  hdrs = ["universes.hpp"]
)

cc_library(
  name = "prometheus_reporter",
  srcs = ["prometheus_reporter.cc"],
  hdrs = ["prometheus_reporter.hpp"],
  deps = [
    "@com_github_jupp0r_prometheus_cpp//push",
  ]
)

cc_library(
  name = "test_runner",
  srcs = ["test_runner.cc"],
  hdrs = ["test_runner.hpp"],
  deps = [
    ":gcs_client",
    ":metrics_tracker",
    ":perftest_config",
    ":prometheus_reporter",
    "@com_google_absl//absl/time",
    "@com_google_absl//absl/flags:flag",
  ]
)

cc_library(
  name = "gcs_client",
  srcs = ["gcs_client.cc"],
  hdrs = ["gcs_client.hpp"],
  deps = [
    ":universes",
    "@google_cloud_cpp//:experimental-storage-grpc",
  ]
)

cc_binary(
  name = "gcs_perf_prober",
  srcs = ["gcs_perf_prober.cc"],
  deps = [
    ":metrics_tracker",
    "@google_cloud_cpp//:experimental-storage-grpc",
    ":prometheus_reporter",
    ":perftest_config",
    ":gcs_client",
    ":test_runner",
    "@com_google_absl//absl/flags:flag",
    "@com_google_absl//absl/flags:parse",
  ]
)

